# Nome da aplicação
spring.application.name=MpFitness
server.port=8080

# Configurações do banco de dados (PostgreSQL)
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
logging.level.org.springframework.security.crypto.password=DEBUG

# Charset e timezone (Brasil)
spring.sql.init.encoding=UTF-8
spring.jackson.time-zone=America/Sao_Paulo
spring.jackson.locale=p

# Caminho absoluto da pasta de uploads
app.upload.dir=${UPLOAD_DIR:/opt/mpfitness/uploads}

# Spring Boot Multipart
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# Servir arquivos estáticos da pasta de uploads
spring.web.resources.static-locations=classpath:/static/,file:${app.upload.dir}/
spring.mvc.static-path-pattern=/uploads/**

#MercadoPago
mercado_pago.access_token=${MERCADO_PAGO_ACCESS_TOKEN}

#Cloudinary
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}

#Id Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email

#LocalhostFront
frontend.url=${FRONTEND_URL}